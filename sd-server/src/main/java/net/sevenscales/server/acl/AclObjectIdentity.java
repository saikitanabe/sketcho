package net.sevenscales.server.acl;import java.util.List;import javax.persistence.CascadeType;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.GeneratedValue;import javax.persistence.GenerationType;import javax.persistence.Id;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.OneToMany;import javax.persistence.OrderBy;/** * * @author jvance */@Entity(name="acl_object_identity")public class AclObjectIdentity extends BaseObject{    private Long id;    private Long objectIdentity;    private Long objectClassId;    private Long parentObject;    private Boolean entriesInheriting;    private List<AclEntry> AclEntries;    private Long ownerSidId;    private AclSid ownerSid;    private AclClass objectClass;        @Override    public String toString(){        return "ID: " + id + " Class: " + objectClass.toString() + " ID: " + objectIdentity.toString();    }        @Id @GeneratedValue(strategy = GenerationType.AUTO)    @Column(name="id")    public Long getId() {        return id;    }    public void setId(Long id) {        this.id = id;    }    @Column(name="entries_inheriting", nullable=false)    public Boolean getEntriesInheriting() {        return entriesInheriting;    }    public void setEntriesInheriting(Boolean entriesInheriting) {        this.entriesInheriting = entriesInheriting;    }    @Column(name="object_id_class", nullable=false)    public Long getObjectClassId() {        return objectClassId;    }    public void setObjectClassId(Long objectClassId) {        this.objectClassId = objectClassId;    }    @ManyToOne    @JoinColumn(name="object_id_class", nullable=false, updatable=false, insertable=false)    public AclClass getObjectClass(){        return objectClass;    }        public void setObjectClass(AclClass objectClass){        this.objectClass = objectClass;    }    @Column(name="object_id_identity", nullable=false)    public Long getObjectIdentity() {        return objectIdentity;    }    public void setObjectIdentity(Long objectIdentity) {        this.objectIdentity = objectIdentity;    }    @Column(name="owner_sid", nullable=false)    public Long getOwnerSidId() {        return ownerSidId;    }    public void setOwnerSidId(Long ownerSidId) {        this.ownerSidId = ownerSidId;    }        @ManyToOne    @JoinColumn(name="owner_sid", nullable=false, updatable=false, insertable=false)    public AclSid getOwnerSid(){        return ownerSid;    }        public void setOwnerSid(AclSid ownerSid){        this.ownerSid = ownerSid;    }    @Column(name="parent_object")    public Long getParentObject() {        return parentObject;    }    public void setParentObject(Long parentObject) {        this.parentObject = parentObject;    }    @OneToMany(        cascade = {CascadeType.ALL},        fetch = FetchType.LAZY    )    @JoinColumn(name="acl_object_identity")    @OrderBy("order")    public List<AclEntry> getAclEntries() {        return AclEntries;    }    public void setAclEntries(List<AclEntry> AclEntries) {        this.AclEntries = AclEntries;    }    @Override    public boolean equals(Object obj) {        if (obj == null) {            return false;        }        if (getClass() != obj.getClass()) {            return false;        }        final AclObjectIdentity other = (AclObjectIdentity) obj;        if (this.id != other.id && (this.id == null || !this.id.equals(other.id))) {            return false;        }        if (this.objectIdentity != other.objectIdentity && (this.objectIdentity == null || !this.objectIdentity.equals(other.objectIdentity))) {            return false;        }        if (this.parentObject != other.parentObject && (this.parentObject == null || !this.parentObject.equals(other.parentObject))) {            return false;        }        if (this.ownerSid != other.ownerSid && (this.ownerSid == null || !this.ownerSid.equals(other.ownerSid))) {            return false;        }        if (this.objectClass != other.objectClass && (this.objectClass == null || !this.objectClass.equals(other.objectClass))) {            return false;        }        return true;    }    @Override    public int hashCode() {        int hash = 5;        hash = 61 * hash + (this.id != null ? this.id.hashCode() : 0);        hash = 61 * hash + (this.objectIdentity != null ? this.objectIdentity.hashCode() : 0);        hash = 61 * hash + (this.parentObject != null ? this.parentObject.hashCode() : 0);        hash = 61 * hash + (this.ownerSid != null ? this.ownerSid.hashCode() : 0);        hash = 61 * hash + (this.objectClass != null ? this.objectClass.hashCode() : 0);        return hash;    }}