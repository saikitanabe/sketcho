<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Application context containing authentication beans.
  -
  - Used by all artifacts.
  -
  - $Id: applicationContext-common-authorization.xml 1930 2007-07-24 17:46:43Z luke_t $
  -->

<beans>

  <!-- ~~~~~~~~~~~~~~~~~~ "BEFORE INVOCATION" AUTHORIZATION DEFINITIONS ~~~~~~~~~~~~~~~~ -->

  <!-- ACL permission masks used by this application -->
  <bean id="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"
        class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
    <property name="staticField" value="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
  </bean>
  <bean id="org.acegisecurity.acls.domain.BasePermission.READ"
        class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
    <property name="staticField" value="org.acegisecurity.acls.domain.BasePermission.READ"/>
  </bean>
  <bean id="org.acegisecurity.acls.domain.BasePermission.DELETE"
        class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
    <property name="staticField" value="org.acegisecurity.acls.domain.BasePermission.DELETE"/>
  </bean>
  <bean id="org.acegisecurity.acls.domain.BasePermission.WRITE"
        class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
    <property name="staticField" value="org.acegisecurity.acls.domain.BasePermission.WRITE"/>
  </bean>

  <!-- An access decision voter that reads ROLE_* configuration settings -->
  <bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter"/>
  
  <!-- An access decision voter that reads ACL_PROJECT_READ configuration settings -->
  <bean id="aclProjectReadVoter" class="org.acegisecurity.vote.AclEntryVoter">
    <constructor-arg ref="aclService"/>
    <constructor-arg value="ACL_PROJECT_READ"/>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
        <ref local="org.acegisecurity.acls.domain.BasePermission.READ"/>
      </list>
    </constructor-arg>
    <property name="processDomainObjectClass" value="net.sevenscales.server.domain.Project"/>
  </bean>
  
    <!-- An access decision voter that reads ACL_PROJECT_WRITE configuration settings -->
  <bean id="aclProjectWriteVoter" class="org.acegisecurity.vote.AclEntryVoter">
    <constructor-arg ref="aclService"/>
    <constructor-arg value="ACL_PROJECT_WRITE"/>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
        <ref local="org.acegisecurity.acls.domain.BasePermission.WRITE"/>
      </list>
    </constructor-arg>
    <property name="processDomainObjectClass" value="net.sevenscales.server.domain.Project"/>
  </bean>

  <!-- An access decision voter that reads ACL_PROJECT_ADMIN configuration settings -->
  <bean id="aclProjectAdminVoter" class="org.acegisecurity.vote.AclEntryVoter">
    <constructor-arg ref="aclService"/>
    <constructor-arg value="ACL_PROJECT_ADMIN"/>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
      </list>
    </constructor-arg>
    <property name="processDomainObjectClass" value="net.sevenscales.server.domain.Project"/>
  </bean>
  
  <!-- PAGE permissions -->
  <bean id="aclPageWriteVoter" class="net.sevenscales.server.acl.AclProjectEntryVoter">
    <constructor-arg ref="aclService"/>
    <constructor-arg value="ACL_PAGE_CONTENT_WRITE"/>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
        <ref local="org.acegisecurity.acls.domain.BasePermission.WRITE"/>
      </list>
    </constructor-arg>
    <property name="processDomainObjectClass" value="net.sevenscales.domain.api.IPageOrderedContent"/>
  </bean>
  
  <!-- PAGE permissions -->
  <bean id="aclPageDeleteVoter" class="net.sevenscales.server.acl.AclProjectEntryVoter">
    <constructor-arg ref="aclService"/>
    <constructor-arg value="ACL_PAGE_CONTENT_DELETE"/>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
        <ref local="org.acegisecurity.acls.domain.BasePermission.DELETE"/>
      </list>
    </constructor-arg>
    <property name="processDomainObjectClass" value="net.sevenscales.domain.api.IPageOrderedContent"/>
  </bean>

  <bean id="aclPageMoveVoter" class="net.sevenscales.server.acl.AclPageMoveEntryVoter">
    <constructor-arg ref="aclService"/>
    <constructor-arg value="ACL_PAGE_MOVE"/>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
        <ref local="org.acegisecurity.acls.domain.BasePermission.WRITE"/>
      </list>
    </constructor-arg>
    <property name="processDomainObjectClass" value="java.lang.Long"/>
	<property name="pageDAO" ref="pageDAO" />
  </bean>
  
  
  <!--  -->
  <!-- LABEL permissions -->
  <bean id="aclLabelReadVoter" class="net.sevenscales.server.acl.AclProjectEntryVoter">
    <constructor-arg ref="aclService"/>
    <constructor-arg value="ACL_LABEL_CONTENT_READ"/>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
        <ref local="org.acegisecurity.acls.domain.BasePermission.READ"/>
      </list>
    </constructor-arg>
    <property name="processDomainObjectClass" value="net.sevenscales.domain.api.ILabel"/>
    <property name="publicOk" value="true"></property>
    <property name="projectDAO"><ref bean="projectDAO"/></property>
  </bean>
  
  <!-- LABEL permissions -->
  <bean id="aclLabelWriteVoter" class="net.sevenscales.server.acl.AclProjectEntryVoter">
    <constructor-arg ref="aclService"/>
    <constructor-arg value="ACL_LABEL_CONTENT_WRITE"/>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
        <ref local="org.acegisecurity.acls.domain.BasePermission.WRITE"/>
      </list>
    </constructor-arg>
    <property name="processDomainObjectClass" value="net.sevenscales.domain.api.ILabel"/>
  </bean>
  
  <!-- LABEL permissions -->
  <bean id="aclLabelDeleteVoter" class="net.sevenscales.server.acl.AclProjectEntryVoter">
    <constructor-arg ref="aclService"/>
    <constructor-arg value="ACL_LABEL_CONTENT_DELETE"/>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
        <ref local="org.acegisecurity.acls.domain.BasePermission.DELETE"/>
      </list>
    </constructor-arg>
    <property name="processDomainObjectClass" value="net.sevenscales.domain.api.ILabel"/>
  </bean>

  
  <!-- An access decision manager used by the business objects -->
  <bean id="authorizationDecisionManager" class="org.acegisecurity.vote.AffirmativeBased">
    <property name="allowIfAllAbstainDecisions" value="false"/>
    <property name="decisionVoters">
      <list>
        <ref local="roleVoter"/>
<!--        <ref local="aclProjectPublicReadVoter" />-->
        <ref local="aclProjectWriteVoter"/>
        <ref local="aclProjectAdminVoter"/>
        <ref local="aclPageWriteVoter"/>
        <ref local="aclPageDeleteVoter"/>
        <ref local="aclPageMoveVoter"/>
        <ref local="aclLabelReadVoter"/>
        <ref local="aclLabelWriteVoter"/>
        <ref local="aclLabelDeleteVoter"/>
      </list>
    </property>
  </bean>

 <!-- ========= ACCESS CONTROL LIST LOOKUP MANAGER DEFINITIONS ========= -->

  <bean id="aclCache" class="org.acegisecurity.acls.jdbc.EhCacheBasedAclCache">
    <constructor-arg>
      <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
          <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
        </property>
        <property name="cacheName" value="aclCache"/>
      </bean>
    </constructor-arg>
  </bean>

  <bean id="lookupStrategy" class="org.acegisecurity.acls.jdbc.BasicLookupStrategy">
    <constructor-arg ref="dataSource"/>
    <constructor-arg ref="aclCache"/>
    <constructor-arg ref="aclAuthorizationStrategy"/>
    <constructor-arg>
      <bean class="org.acegisecurity.acls.domain.ConsoleAuditLogger"/>
    </constructor-arg>
  </bean>

  <bean id="aclAuthorizationStrategy" class="org.acegisecurity.acls.domain.AclAuthorizationStrategyImpl">
    <constructor-arg>
      <list>
        <bean class="org.acegisecurity.GrantedAuthorityImpl">
          <constructor-arg value="ROLE_ADMINISTRATOR"/>
        </bean>
        <bean class="org.acegisecurity.GrantedAuthorityImpl">
          <constructor-arg value="ROLE_ADMINISTRATOR"/>
        </bean>
        <bean class="org.acegisecurity.GrantedAuthorityImpl">
          <constructor-arg value="ROLE_ADMINISTRATOR"/>
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <bean id="aclService" class="org.acegisecurity.acls.jdbc.JdbcMutableAclService">
    <constructor-arg ref="dataSource"/>
    <constructor-arg ref="lookupStrategy"/>
    <constructor-arg ref="aclCache"/>
  </bean>

  <!-- ============== "AFTER INTERCEPTION" AUTHORIZATION DEFINITIONS =========== -->
  <bean id="afterInvocationManager" class="org.acegisecurity.afterinvocation.AfterInvocationProviderManager">
    <property name="providers">
      <list>
        <ref local="afterAclRead"/>
<!--        <ref local="afterProjectPublicAclRead"/>-->
        <ref local="afterAclCollectionRead"/>
      </list>
    </property>
  </bean>
  
    <!-- Processes AFTER_ACL_READ configuration settings -->
  <bean id="afterAclRead" class="net.sevenscales.server.acl.AclEntryAfterInvocationProjectPublicProvider">
    <constructor-arg>
      <ref bean="aclService"/>
    </constructor-arg>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
        <ref local="org.acegisecurity.acls.domain.BasePermission.READ"/>
      </list>
    </constructor-arg>
  </bean>

<!--  <bean id="afterProjectPublicAclRead" class="net.sevenscales.server.acl.AclEntryAfterInvocationProjectPublicProvider">-->
<!--    <constructor-arg>-->
<!--      <ref bean="aclService"/>-->
<!--    </constructor-arg>-->
<!--    <constructor-arg>-->
<!--      <list>-->
<!--        <ref local="org.acegisecurity.acls.domain.BasePermission.READ"/>-->
<!--      </list>-->
<!--    </constructor-arg>-->
<!--  </bean>-->

  <!-- Processes AFTER_ACL_COLLECTION_READ configuration settings -->
  <bean id="afterAclCollectionRead"
        class="net.sevenscales.server.acl.AclEntryAfterInvocationProjectCollectionFilteringProvider">
    <constructor-arg>
      <ref bean="aclService"/>
    </constructor-arg>
    <constructor-arg>
      <list>
        <ref local="org.acegisecurity.acls.domain.BasePermission.ADMINISTRATION"/>
        <ref local="org.acegisecurity.acls.domain.BasePermission.READ"/>
      </list>
    </constructor-arg>
  </bean>

	<bean id="projectServiceSecurity" class="org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor"> 
<!--		<property name="validateConfigAttributes"><value>true</value></property> -->
		<property name="authenticationManager"><ref bean="authenticationManager"/></property> 
		<property name="accessDecisionManager"><ref bean="authorizationDecisionManager"/></property> 
<!--		<property name="runAsManager"><ref bean="runAsManager"/></property> -->
		<property name="afterInvocationManager"><ref bean="afterInvocationManager"/></property> 
		<property name="objectDefinitionSource"> 
			<value> 
				net.sevenscales.serverAPI.remote.IProjectRemote.findAll=ROLE_ANONYMOUS,ROLE_USER,AFTER_ACL_COLLECTION_READ
				net.sevenscales.serverAPI.remote.IProjectRemote.open=ROLE_ANONYMOUS,ROLE_USER,AFTER_ACL_READ
				net.sevenscales.serverAPI.remote.IProjectRemote.update=ROLE_USER,ACL_PROJECT_WRITE
<!--				net.st.chattest.client.DatabaseService.getProjectById=ROLE_SUPERVISOR,AFTER_ACL_READ-->
<!--				net.st.chattest.client.DatabaseService.getProjects=ROLE_ANONYMOUS,ROLE_USER,AFTER_ACL_COLLECTION_READ-->
			</value> 
		</property> 
	</bean>
	
  <bean id="pageServiceSecurity" class="org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor"> 
		<property name="authenticationManager"><ref bean="authenticationManager"/></property> 
		<property name="accessDecisionManager"><ref bean="authorizationDecisionManager"/></property> 
		<property name="afterInvocationManager"><ref bean="afterInvocationManager"/></property> 
		<property name="objectDefinitionSource"> 
			<value>
				net.sevenscales.serverAPI.remote.IPageRemote.addContent=ACL_PAGE_CONTENT_WRITE
				net.sevenscales.serverAPI.remote.IPageRemote.updateContent=ACL_PAGE_CONTENT_WRITE
				net.sevenscales.serverAPI.remote.IPageRemote.moveContent=ACL_PAGE_CONTENT_WRITE
				net.sevenscales.serverAPI.remote.IPageRemote.deleteContent=ACL_PAGE_CONTENT_DELETE
				net.sevenscales.serverAPI.remote.IPageRemote.move=ACL_PAGE_MOVE
			</value> 
		</property> 
	</bean> 

  <bean id="labelSecurity" class="org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor"> 
		<property name="authenticationManager"><ref bean="authenticationManager"/></property> 
		<property name="accessDecisionManager"><ref bean="authorizationDecisionManager"/></property> 
		<property name="afterInvocationManager"><ref bean="afterInvocationManager"/></property> 
		<property name="objectDefinitionSource"> 
			<value>
				net.sevenscales.serverAPI.remote.ILabelRemote.save=ACL_LABEL_CONTENT_WRITE
				net.sevenscales.serverAPI.remote.ILabelRemote.update=ACL_LABEL_CONTENT_WRITE
				net.sevenscales.serverAPI.remote.ILabelRemote.remove=ACL_LABEL_CONTENT_DELETE
				net.sevenscales.serverAPI.remote.ILabelRemote.removeFromPage=ACL_LABEL_CONTENT_DELETE
				net.sevenscales.serverAPI.remote.ILabelRemote.addPageToLabel=ACL_LABEL_CONTENT_WRITE
				net.sevenscales.server.dao.ILabelDAO.findAllPages2=ACL_LABEL_CONTENT_READ
			</value>
		</property> 
	</bean> 
	 
	
<!--	<bean id="dataSourcePopulator" class="net.sevenscales.server.acl.DataSourcePopulator">-->
<!--	   <property name="dataSource" ref="dataSource"/>-->
<!--	   <property name="mutableAclService" ref="aclService"/>-->
<!--	   <property name="platformTransactionManager" ref="transactionManager"/>-->
<!--	   <property name="projectDAO" ref="projectDAO"/>-->
<!--   </bean>-->

</beans>
